[project]
name = "nba_api"
version = "1.10.0"
description = "An API Client package to access the APIs for NBA.com"
requires-python = ">=3.9"
license = "MIT"
authors = [ {name = "Swar Patel", email = "<swar.m.patel@gmail.com>"}]
maintainers = [
    {name = "Swar Patel", email = "<swar.m.patel@gmail.com>"},
    {name = "Randy Forbes", email="Randy Forbes <randy.forbes@gmail.com>"},
]
keywords = [
    "api", 
    "basketball", 
    "data", 
    "nba", 
    "sports", 
    "stats"
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "numpy >=1.26.0 ; python_version < '3.13'",
    "numpy >=2.1.0 ; python_version >= '3.13'",
    "pandas >=2.1.0; python_version < '3.12'",
    "pandas >=2.2.0 ; python_version >= '3.12'",
    "requests (>=2.32.3,<3.0.0)"
]

readme = "README.md"

[project.urls]
    repository = "https://github.com/swar/nba_api"
    "Bug Tracker" = "https://github.com/swar/nba_api/issues"
    documentation = "https://github.com/swar/nba_api/blob/master/README.md"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^4.0"
flake8 = "^7.1.1"
python-semantic-release = "^9.0.0"
pandas = [
    {version = ">=2.2.0", python = ">=3.12"},
    {version = "<2.2.0", python = "<3.12"} 
]

[tool.pytest.ini_options]
testpaths = "./tests/unit/"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "poetry build"
dist_path = "dist/"
upload_to_pypi = true
upload_to_release = true
commit_subject = "chore: release v{version}"
commit_message = "chore: release v{version}\n\n{changelog}"
tag_format = "v{version}"
changelog_placeholder = "# NBA API Change Log"

[tool.semantic_release.remote]
type = "github"
token = { env = "GITHUB_TOKEN" }

[tool.semantic_release.branches.master]
match = "(master|main)"
prerelease = false

[tool.semantic_release.branches.test]
match = "test-release"
prerelease = true
prerelease_token = "rc"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.changelog]
template_dir = "templates"
exclude_commit_patterns = [
  "^Bump .*",
  "^Update .*", 
  "^Merge pull request.*"
]

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.MD"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false