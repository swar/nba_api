version: 2.1
      
orbs:
  snyk: snyk/snyk@1.4.0

references:
  python_images: &python_images
    - "cimg/python:3.9"
    - "cimg/python:3.10"
    - "cimg/python:3.11"
    - "cimg/python:3.12"
    - "cimg/python:3.13"
  default_image: &default_image cimg/python:3.13

jobs:
  main:
    parameters:
      image: 
        type: string
      circle_pr_number:
        type: string
        default: $CIRCLE_PR_NUMBER
    
    docker: 
      - image: <<parameters.image>>
    
    steps: 
      - checkout
      - run:
          name: install dependencies
          command: poetry install --no-ansi
      - unless:
          condition: << parameters.circle_pr_number >>
          steps:
            - snyk/scan
      - run:
          name: run tests
          command: poetry run pytest
      - run: 
          name: run flake8
          command: poetry run flake8

  release:
    docker:
      - image: *default_image
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install --no-ansi
      - run:
          name: Configure git
          command: |
            git config user.name "CircleCI"
            git config user.email "ci@circleci.com"
      - run:
          name: Configure authentication
          command: |
            export REPOSITORY_USERNAME=__token__
            export REPOSITORY_PASSWORD=$PYPI_TOKEN
            poetry config pypi-token.pypi $PYPI_TOKEN
      - run:
          name: Run semantic release
          command: |
            export REPOSITORY_USERNAME=__token__
            export REPOSITORY_PASSWORD=$PYPI_TOKEN
            poetry run semantic-release publish
workflows:
  build:
    jobs:
      - main:
          matrix:
            parameters:
              image: *python_images
      - release:
          requires:
            - main
          filters:
            branches:
              only: master